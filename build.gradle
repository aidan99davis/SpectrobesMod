buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url  = 'https://plugins.gradle.org/m2/' }
        maven { url = 'https://maven.parchmentmc.org' }
        jcenter()
        mavenCentral()
        gradlePluginPortal()
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.4.0'
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'com.matthewprenger.cursegradle'
apply plugin: 'java'

version = '1.5.4'
group = 'com.aidan99davis.spectrobesmod' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'spectrobesmod'

//sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
    mappings channel: 'parchment', version: '2022.10.16-1.19.2'
        accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')

            taskName 'Client'

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                spectrobesmod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            taskName 'Server'

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                spectrobesmod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'spectrobesmod', '--all', '--output', file('src/generated/resources/')

            mods {
                spectrobesmod {
                    source sourceSets.main
                }
            }
        }
    }
}


repositories {
    maven { url "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/" }
    maven { url "https://maven.theillusivec4.top/" }
    maven { url "https://minecraft.curseforge.com/api/maven/" }
    maven { url "https://maven.blamejared.com" }
    maven { url "https://cfa2.cursemaven.com" }
    maven { url "https://maven.shedaniel.me" }
}


dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.1.25'
    implementation fg.deobf('software.bernie.geckolib:geckolib-forge-1.19:3.1.36')
}


jar {
    manifest {
        attributes([
            "Specification-Title": "spectrobesmod",
            "Specification-Vendor": "spectrobes-mod-team",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"spectrobes-mod-team",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar') 
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
